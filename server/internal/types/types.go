// Code generated by goctl. DO NOT EDIT.
package types

type PatchWorkloadReq struct {
	Cluster      string `path:"cluster"`
	Namespace    string `path:"namespace"`
	WorkloadName string `path:"workload_name"`
	Container    string `form:"container"`
	Image        string `form:"image"`
}

type ListWorkloadReq struct {
	Cluster       string `path:"cluster"`
	Namespace     string `path:"namespace"`
	LabelSelector string `form:"label_selector,optional"`
}

type RolloutReq struct {
	Cluster      string `path:"cluster"`
	Namespace    string `path:"namespace"`
	WorkloadName string `path:"workload_name"`
}

type ResourceReq struct {
	Cluster      string `path:"cluster"`
	Namespace    string `path:"namespace"`
	ResourceType string `path:"resource_type"`
	ResourceName string `path:"resource_name"`
}

type PatchYamlReq struct {
	Cluster   string                 `path:"cluster"`
	Namespace string                 `path:"namespace"`
	Content   string                 `json:"content"`
	Variables map[string]interface{} `json:"variables"`
}

type ScaleReq struct {
	Cluster   string          `path:"cluster"`
	Namespace string          `path:"namespace"`
	Workloads []ScaleWorkload `json:"workloads"`
}

type ScaleWorkload struct {
	Name     string `json:"name"`
	Replicas int    `json:"replicas"`
	Disabled bool   `json:"disabled,optional"`
}

type GetServiceReq struct {
	ServiceName string `path:"service_name"`
}

type GetPodEventReq struct {
	Cluster   string `path:"cluster"`
	Namespace string `path:"namespace"`
	PodName   string `path:"pod_name"`
}

type DataByIdReq struct {
	Tablename string `path:"tablename"`
	Id        string `path:"id"`
}

type CreateDataReq struct {
	Tablename string                 `path:"tablename"`
	Body      map[string]interface{} `json:"body"`
}

type UpdateDataReq struct {
	DataByIdReq
	Body map[string]interface{} `json:"body"`
}

type LoginReq struct {
	Username string `json:"username"`
	Password string `json:"password"`
}

type ChpasswdReq struct {
	Username    string `json:"username"`
	OldPassword string `json:"oldPassword"`
	NewPassword string `json:"newPassword"`
}

type Response struct {
	Code    int         `json:"code"`
	Data    interface{} `json:"data,omitempty"`
	Message string      `json:"message,omitempty"`
}
